{
/*
    tsconfig.json是ts编译器的配置文件 ts编译器可以根据它的信息来对代码进行编译
*/
    // 用来指定哪些ts文件需要被编译
        // 路径： **表示任意目录
        //        *表示任意文件
    "include": [
        // 这个表示当前目录下 src目录下的所有文件
        "./src/*"
    ],

    // 不需要被编译的文件目录
    // "exclude": [

    // ]

    // 编译器选项
    "compilerOptions": {
        
        // target用来指定ts被编译为的ES版本
        //'es3', 'es5', 'es6(es2015)', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'es2022' 'esnext'.
        "target": "es2015",

        // moudle 指定要使用的模块化的规范
        //'none', 'commonjs', 'amd', 'system', 'umd', 'es6(es2015)', 'es2020', 'esnext'
        "module": "es2015",

        // lib 用来指定项目中要使用的库 一般我们不会设置它
        // "lib": []

        // outDir 用来指定编译后文件所在的目录
        "outDir": "./dist",

        // outFile 将代码合并为一个文件
        // 设置outfFile后，所以的全局作用域中的代码会合并到同一个文件中
        // "outFile": "./dist/app.js"

        // 是否对js文件进行编译 默认是false
        "allowJs": true,

        // 是否检查js代码是否符合语法规范 默认是false
        "checkJs": true,

        // 是否移除注释 默认是false
        "removeComments": true,

        // 是否不生成编译后的文件 默认是false
        "noEmit": false,

        // 当有错误时是否不生产编译后的文件 默认是false
        "noEmitOnError": false,

        // 下方所有严格检查的总开关 默认是false 如果相同的话可以直接用这个，下面四个省略
        "strict": false,

        // 用来设置编译后的文件是否使用严格模式 默认是true
        "alwaysStrict": false,

        // 不允许隐式的any类型 默认是false
        "noImplicitAny": false,

        // 不允许不明确类型的this 默认是false
        "noImplicitThis": false,

        // 严格的检查空值 默认是false
        "strictNullChecks": false,
    }
}